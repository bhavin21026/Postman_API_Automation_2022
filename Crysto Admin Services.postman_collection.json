{
	"info": {
		"_postman_id": "a568b778-5bc7-41bf-b04e-108aef4a89a3",
		"name": "Crysto Admin Services",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19726677"
	},
	"item": [
		{
			"name": "Manage Product",
			"item": [
				{
					"name": "ADD Product without mandatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to ADD  product without mandatory details\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.error).to.eql(\"product name should be 2 to 30 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameNew=\"Crypto\"\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)\r",
									"\r",
									"/*var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)*/\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productid= jsonBody.response.id\r",
									"console.log(productid)\r",
									"pm.environment.set(\"ProductID\", productid);\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productName).to.eql(product);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"{{ProductName}}\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate Product validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add duplicate product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.ERROR).to.eql(\"Product already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"{{ProductName}}\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Added product in list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that newly added proudct is added to list of products\", function () {\r",
									"\r",
									"  pm.expect(pm.response.text()).to.include(product);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE product",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameUpdated=\"Crypto\"\r",
									"console.log(productNameUpdated)\r",
									"pm.environment.set(\"UpdateProductName\",productNameUpdated)\r",
									"\r",
									"/*var productNameUpdated=pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"console.log(productNameUpdated)\r",
									"pm.environment.set(\"UpdateProductName\",productNameUpdated)*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to UPDATE product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productName).to.eql(UpdatedProduct);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 5,\r\n  \"productName\": \"{{UpdateProductName}}\",\r\n  \"description\": \"Play and Win\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/update/{{ProductID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"update",
								"{{ProductID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to DELETE product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.message).to.eql(\"Product deleted successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/delete/{{ProductID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"delete",
								"{{ProductID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Deleted product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted product is no longer active in list of all products\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/{{ProductID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"{{ProductID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all created products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted product is no longer active in list of all products\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage Product Category",
			"item": [
				{
					"name": "Add product for Product Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									"\r",
									"\r",
									"var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productid= jsonBody.response.id\r",
									"console.log(productid)\r",
									"pm.environment.set(\"ProductID\", productid);\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productName).to.eql(product);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"{{ProductName}}\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product  category without mandatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add blank  product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.error).to.eql(\"product category name should be 2 to 30 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productCategoryName\":\"\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD Product Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productCategoryName=\"Banking 100\"\r",
									"console.log(productCategoryName)\r",
									"pm.environment.set(\"ProductCategory\",productCategoryName)\r",
									"\r",
									"/*var productCategoryName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productCategoryName)\r",
									"pm.environment.set(\"ProductCategory\",productCategoryName)*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productcatid= jsonBody.response.id\r",
									"console.log(productcatid)\r",
									"pm.environment.set(\"ProductCategoryID\", productcatid);\r",
									"\r",
									"var productCategory=pm.environment.get(\"ProductCategory\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productCategoryName).to.eql(productCategory);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productCategoryName\":\"{{ProductCategory}}\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate Product Category validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add duplicate product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.ERROR).to.eql(\"ProductCategory already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productCategoryName\":\"{{ProductCategory}}\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Added product category in list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var productCat=pm.environment.get(\"ProductCategory\")\r",
									"\r",
									"pm.test(\"Verify that newly added proudct category is added to list of product categories\", function () {\r",
									"\r",
									"  pm.expect(pm.response.text()).to.include(productCat);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE product category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productCatNameUpdated=pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"console.log(productCatNameUpdated)\r",
									"pm.environment.set(\"UpdateProductCategoryName\",productCatNameUpdated)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProductCategory=pm.environment.get(\"UpdateProductCategoryName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to UPDATE product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productCategoryName).to.eql(UpdatedProductCategory);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 3,\r\n  \"productCategoryName\":\"{{UpdateProductCategoryName}}\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/update/{{ProductCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"update",
								"{{ProductCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE product Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to DELETE product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.message).to.eql(\"Product deleted successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/delete/{{ProductCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"delete",
								"{{ProductCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Deleted product category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted product category is no longer active in list of all products category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/{{ProductID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"{{ProductID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all product category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"/*pm.test(\"Verify that deleted product category is no longer active in list of all products category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage Contest Category",
			"item": [
				{
					"name": "Add product for Contest Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productid= jsonBody.response.id\r",
									"console.log(productid)\r",
									"pm.environment.set(\"ProductID\", productid);\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productName).to.eql(product);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"{{ProductName}}\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD Product Category to map contest category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productCategoryName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productCategoryName)\r",
									"pm.environment.set(\"ProductCategory\",productCategoryName)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productcatid= jsonBody.response.id\r",
									"console.log(productcatid)\r",
									"pm.environment.set(\"ProductCategoryID\", productcatid);\r",
									"\r",
									"var productCategory=pm.environment.get(\"ProductCategory\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productCategoryName).to.eql(productCategory);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productCategoryName\":\"{{ProductCategory}}\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add contest category without mandatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add blank  contest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.error).to.eql(\"content category name should be 2 to 30 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"contestCategoryName\": \"\",\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"productCategoryName\": \"{{ProductCategory}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add contest category  with valid details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var contestCategoryName=\"Crypto Mega Contest\"\r",
									"console.log(contestCategoryName)\r",
									"pm.environment.set(\"ContestCategory\",contestCategoryName)\r",
									"\r",
									"/*var contestCategoryName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(contestCategoryName)\r",
									"pm.environment.set(\"ContestCategory\",contestCategoryName)*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"contestCategoryid= jsonBody.response.id\r",
									"console.log(contestCategoryid)\r",
									"pm.environment.set(\"ContestCategoryID\", contestCategoryid);\r",
									"\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should be able to add new contest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.message).to.eql(\"ContestCategory saved successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"contestCategoryName\": \"{{ContestCategory}}\",\r\n  \"productCategoryId\": \"1\",\r\n  \"productCategoryName\": \"Crypto 100\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate Contest Category validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add duplicate Contest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.ERROR).to.eql(\"ContestCategory already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"contestCategoryName\": \"{{ContestCategory}}\",\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"productCategoryName\": \"{{ProductCategory}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Added Contest category in list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var ContestCategory=pm.environment.get(\"ContestCategory\")\r",
									"\r",
									"pm.test(\"Verify that newly added contest category is added to list of contest categories\", function () {\r",
									"\r",
									"  pm.expect(pm.response.text()).to.include(ContestCategory);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE product category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var contestCatNameUpdated=pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"console.log(contestCatNameUpdated)\r",
									"pm.environment.set(\"UpdateContestCategoryName\",contestCatNameUpdated)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdateContestCategoryName=pm.environment.get(\"UpdateContestCategoryName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to UPDATE COntest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.contestCategoryName).to.eql(UpdateContestCategoryName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 3,\r\n  \"contestCategoryName\": \"{{UpdateContestCategoryName}}\",\r\n  \"productCategoryId\": 3,\r\n  \"productCategoryName\": \"Banking 100\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/update/{{ContestCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"update",
								"{{ContestCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Contest Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to DELETE Contest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.message).to.eql(\"Contestcategory deleted successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/delete/{{ContestCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"delete",
								"{{ContestCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Deleted Contest category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted contest category is no longer active in list of all contest  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/{{ContestCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"{{ContestCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Contest category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted contest category is no longer active in list of all contest  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/contestCategory/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"contestCategory",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage Items",
			"item": [
				{
					"name": "Add Item without madatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ItemName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(ItemName)\r",
									"pm.environment.set(\"ItemName\",ItemName)\r",
									"\r",
									"var nseCode=pm.variables.replaceIn('{{$randomCurrencyCode}}')\r",
									"console.log(nseCode)\r",
									"pm.environment.set(\"NSECode\",nseCode)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"\r",
									"var ItemName=pm.environment.get(\"ItemName\")\r",
									"\r",
									"pm.test(\"Verify that user should not be able to ADD  Item without mandatory details\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.error).to.eql(\"item name should be 2 to 30 characters\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"\",\r\n  \"highPrice\": 2500,\r\n  \"lowPrice\": 400,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Item with valid details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ItemName=\"LIC\"\r",
									"console.log(ItemName)\r",
									"pm.environment.set(\"ItemName\",ItemName)\r",
									"\r",
									"var nseCode=pm.variables.replaceIn('{{$randomCurrencyCode}}')\r",
									"console.log(nseCode)\r",
									"pm.environment.set(\"NSECode\",nseCode)\r",
									"\r",
									"\r",
									"/*var ItemName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(ItemName)\r",
									"pm.environment.set(\"ItemName\",ItemName)\r",
									"\r",
									"var nseCode=pm.variables.replaceIn('{{$randomCurrencyCode}}')\r",
									"console.log(nseCode)\r",
									"pm.environment.set(\"NSECode\",nseCode)*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"itemID= jsonBody.response.id\r",
									"console.log(itemID)\r",
									"pm.environment.set(\"itemID\", itemID);\r",
									"\r",
									"var ItemName=pm.environment.get(\"ItemName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid Item\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.itemName).to.eql(ItemName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"{{ItemName}}\",\r\n  \"highPrice\": 1000,\r\n  \"lowPrice\": 800,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate Item validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add duplicate Item\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.ERROR).to.eql(\"Item already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"{{ItemName}}\",\r\n  \"highPrice\": 2500,\r\n  \"lowPrice\": 400,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Added Item in list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var ItemName=pm.environment.get(\"ItemName\")\r",
									"\r",
									"pm.test(\"Verify that newly added Item is added to list of all items\", function () {\r",
									"\r",
									"  pm.expect(pm.response.text()).to.include(ItemName);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE  Item details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var UpdatedItemName=pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"console.log(UpdatedItemName)\r",
									"pm.environment.set(\"UpdatedItemName\",UpdatedItemName)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedItemName=pm.environment.get(\"UpdatedItemName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to UPDATE Item Details\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.itemName).to.eql(UpdatedItemName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"{{UpdatedItemName}}\",\r\n  \"highPrice\": 1100,\r\n  \"lowPrice\": 300,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/update/{{itemID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"update",
								"{{itemID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to DELETE Contest category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.message).to.eql(\"Contestcategory deleted successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/delete/{{itemID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"delete",
								"{{itemID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Deleted Item from list of all items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted contest category is no longer active in list of all contest  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/{{ContestCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"{{ContestCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted contest category is no longer active in list of all contest  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"all"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Manage Item Category",
			"item": [
				{
					"name": "Add Product for Item Category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productNameNew=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productNameNew)\r",
									"pm.environment.set(\"ProductName\",productNameNew)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productid= jsonBody.response.id\r",
									"console.log(productid)\r",
									"pm.environment.set(\"ProductID\", productid);\r",
									"\r",
									"var product=pm.environment.get(\"ProductName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productName).to.eql(product);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productName\":\"{{ProductName}}\",\r\n  \"description\":\"{{ProductDescription}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/product/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"product",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "ADD Product Category to map with  item category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var productCategoryName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(productCategoryName)\r",
									"pm.environment.set(\"ProductCategory\",productCategoryName)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"productcatid= jsonBody.response.id\r",
									"console.log(productcatid)\r",
									"pm.environment.set(\"ProductCategoryID\", productcatid);\r",
									"\r",
									"var productCategory=pm.environment.get(\"ProductCategory\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid product category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.productCategoryName).to.eql(productCategory);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"productCategoryName\":\"{{ProductCategory}}\",\r\n  \"productId\": \"{{ProductID}}\",\r\n  \"productName\": \"{{ProductName}}\",\r\n  \"startTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"endTime\": \"2022-10-10T17:29:32.539Z\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/productCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"productCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add New Item",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ItemName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(ItemName)\r",
									"pm.environment.set(\"ItemName\",ItemName)\r",
									"\r",
									"var nseCode=pm.variables.replaceIn('{{$randomCurrencyCode}}')\r",
									"console.log(nseCode)\r",
									"pm.environment.set(\"NSECode\",nseCode)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"itemID= jsonBody.response.id\r",
									"console.log(itemID)\r",
									"pm.environment.set(\"itemID\", itemID);\r",
									"\r",
									"var ItemName=pm.environment.get(\"ItemName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid Item\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.itemName).to.eql(ItemName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"{{ItemName}}\",\r\n  \"highPrice\": 2500,\r\n  \"lowPrice\": 400,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Item category with valid mandatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"ItemCategoryID= jsonBody.response.id\r",
									"console.log(ItemCategoryID)\r",
									"pm.environment.set(\"ItemCategoryID\", ItemCategoryID);\r",
									"\r",
									"var productCategory=pm.environment.get(\"ItemCategoryID\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to create new item category with valid details\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.message).to.eql(\"ItemCategory saved successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemId\": 7,\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Item category without mandatory details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not be able to create new item category without mandatory details\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.error).to.eql(\"itemId can not be null\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemId\": \"\",\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Duplicate Item Category validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that user should not allow to add duplicate Item category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.ERROR).to.eql(\"ItemCategory already exist\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemId\": \"{{itemID}}\",\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Added Item category in list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var ItemCategoryID=pm.environment.get(\"ItemCategoryID\")\r",
									"\r",
									"pm.test(\"Verify that newly added Item category is added to list of Item categories\", function () {\r",
									"\r",
									"  pm.expect(pm.response.text()).to.include(ItemCategoryID);});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/productCategory/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"productCategory",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add New Item again",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var ItemName=pm.variables.replaceIn('{{$randomCompanyName}}')\r",
									"console.log(ItemName)\r",
									"pm.environment.set(\"ItemName\",ItemName)\r",
									"\r",
									"var nseCode=pm.variables.replaceIn('{{$randomCurrencyCode}}')\r",
									"console.log(nseCode)\r",
									"pm.environment.set(\"NSECode\",nseCode)"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"itemID= jsonBody.response.id\r",
									"console.log(itemID)\r",
									"pm.environment.set(\"itemID\", itemID);\r",
									"\r",
									"var ItemName=pm.environment.get(\"ItemName\")\r",
									"\r",
									"pm.test(\"Verify that user should be able to ADD valid Item\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.itemName).to.eql(ItemName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemName\": \"{{ItemName}}\",\r\n  \"highPrice\": 2500,\r\n  \"lowPrice\": 400,\r\n  \"nseCode\": \"{{NSECode}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/item/save",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"item",
								"save"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE Item category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var contestCatNameUpdated=pm.variables.replaceIn('{{$randomFirstName}}')\r",
									"console.log(contestCatNameUpdated)\r",
									"pm.environment.set(\"UpdateContestCategoryName\",contestCatNameUpdated)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to UPDATE Item category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.message).to.eql(\"ItemCategory updated successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 0,\r\n  \"itemId\": \"{{itemID}}\",\r\n  \"productCategoryId\": \"{{ProductCategoryID}}\",\r\n  \"isActive\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/update/{{ItemCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"update",
								"{{ItemCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE Item Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"var UpdatedProduct=pm.environment.get(\"UpdateProductName\")\r",
									"\r",
									"\r",
									"pm.test(\"Verify user should be able to DELETE Item category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.message).to.eql(\"Itemcategory deleted successfully\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/delete/{{ItemCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"delete",
								"{{ItemCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Deleted Contest category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted Item  category is no longer active in list of all Item  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/{{ItemCategoryID}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"{{ItemCategoryID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Item category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"jsonBody= JSON.parse(responseBody)\r",
									"\r",
									"\r",
									"pm.test(\"Verify that deleted Item  category is no longer active in list of all Item  category\", function () {\r",
									"\r",
									"    pm.expect(jsonBody.response.isActive).to.eql(false);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admin/itemCategory/all",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admin",
								"itemCategory",
								"all"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}